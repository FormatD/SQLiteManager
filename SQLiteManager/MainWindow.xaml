<Window x:Class="SQLiteManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:SQLiteManager.ViewModel"
        xmlns:local="clr-namespace:SQLiteManager"
        xmlns:con="clr-namespace:SQLiteManager.Converter"
        x:Name="window"
        Title="SQLite Manager" MinWidth="800" MinHeight="400" Closing="Window_Closing">
    <Window.Resources>
        <con:NullToVisibilityConverter x:Key="NullToVisibility"></con:NullToVisibilityConverter>
        <con:OppositeConverter x:Key="Opposite"></con:OppositeConverter>
    </Window.Resources>
    <Grid x:Name="MainGrid">
        <Grid.Resources>
            <Style TargetType="GroupBox">
                <Setter Property="FontSize" Value="20"></Setter>
                <Setter Property="Margin" Value="5"></Setter>
                <Setter Property="Padding" Value="5"></Setter>
            </Style>
            <Style TargetType="ListView">
                <Setter Property="Margin" Value="10"></Setter>
                <Setter Property="BorderThickness" Value="0"></Setter>
            </Style>
            <Style TargetType="Label">
                <Setter Property="Margin" Value="10"></Setter>
                <Setter Property="FontSize" Value="15"></Setter>
            </Style>
            <Style x:Key="TextBoxInForm" TargetType="TextBox">
                <Setter Property="Margin" Value="5"></Setter>
                <Setter Property="Padding" Value="5"></Setter>
                <Setter Property="FontSize" Value="15"></Setter>
                <Setter Property="VerticalAlignment" Value="Center"></Setter>
            </Style>
            <Style TargetType="DataGrid">
                <Setter Property="Margin" Value="5"></Setter>
                <Setter Property="Padding" Value="5"></Setter>
            </Style>
            <Style TargetType="Button">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ControlDarkDarkColorKey}}"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground">
                            <Setter.Value>
                                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.HotTrackColorKey}}"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Margin" Value="5"></Setter>
                <Setter Property="FontSize" Value="18"></Setter>
                <Setter Property="FontWeight" Value="Normal"></Setter>
                <Setter Property="Padding" Value="5"></Setter>
                <Setter Property="BorderThickness" Value="0"></Setter>
                <Setter Property="Background" Value="White"/>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.MenuHighlightColorKey}}"/>
                    </Setter.Value>
                </Setter>
            </Style>
        </Grid.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1.5*"></ColumnDefinition>
                <ColumnDefinition Width="2*"></ColumnDefinition>
                <ColumnDefinition Width="3*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <GroupBox Header="所有数据库">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto"></RowDefinition>
                            <RowDefinition></RowDefinition>
                        </Grid.RowDefinitions>
                        <Button Grid.Row="0" Grid.Column="0" Content="新建" Command="{Binding CreateDBCommand}"></Button>
                        <Button Grid.Row="0" Grid.Column="1" Content="注册" Command="{Binding RegisterDBCommand}"></Button>
                        <Button Grid.Row="0" Grid.Column="2" Content="移除" Command="{Binding RemoveDBCommand}"></Button>
                        <ListView Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3" 
                                  ItemsSource="{Binding DBs,Mode=TwoWay}"
                                  SelectedItem="{Binding ActiveDB,Mode=TwoWay}"
                                  x:Name="listView">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Border Padding="5">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsValid}" Value="True">
                                                        <Setter Property="BorderBrush" Value="White"></Setter>
                                                        <Setter Property="BorderThickness" Value="0"></Setter>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsValid}" Value="False">
                                                        <Setter Property="BorderBrush" Value="Red"></Setter>
                                                        <Setter Property="BorderThickness" Value="2"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition></RowDefinition>
                                                <RowDefinition></RowDefinition>
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row="0" Text="{Binding DBName}" FontWeight="Bold"></TextBlock>
                                            <TextBlock Grid.Row="1" Text="{Binding DBPath}" FontSize="15"></TextBlock>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </Grid>
                </GroupBox>
            </Grid>

            <Grid Grid.Column="1" IsEnabled="{Binding IsActiveDBEnable}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>
                <Grid Grid.Row="0" DataContext="{Binding ActiveDB}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Button Grid.Column="0" Content="新建表" Command="{Binding ShowCreateTableCommand}"></Button>
                    <Button Grid.Column="1" Content="新建视图"></Button>
                    <Button Grid.Column="2" Content="删除表"></Button>
                </Grid>
                <GroupBox Grid.Row="1" Header="所有表格" DataContext="{Binding ActiveDB}">
                    <ListView ItemsSource="{Binding Tables}"
                              SelectedItem="{Binding ActivatedTable}"
                              SelectionMode="Single">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Expander Header="{Binding Name}" Margin="3" 
                                          IsExpanded="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem},Path=IsSelected}">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition></RowDefinition>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"></ColumnDefinition>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>
                                        <Label Grid.Row="0" Grid.Column="0" Content="定义"></Label>
                                        <!--<Label Grid.Row="0" Grid.Column="1" Content="{Binding Definition}">
                                            <Label.Resources>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="TextWrapping" Value="Wrap" />
                                                </Style>
                                            </Label.Resources>
                                        </Label>-->
                                        <Label Grid.Row="0" Grid.Column="1">
                                            <Label.Content>
                                                <AccessText TextWrapping="Wrap" Text="{Binding Definition}"/>
                                            </Label.Content>
                                        </Label>
                                    </Grid>
                                </Expander>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </GroupBox>

                <GroupBox Grid.Row="2" Header="输入SQL语句">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3*"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <TextBox Grid.Row="0"></TextBox>
                        <Button Grid.Row="1" Content="执行SQL语句"></Button>
                    </Grid>
                </GroupBox>
            </Grid>

            <Grid Grid.Column="2">
                <DataGrid Margin="10" BorderThickness="0" IsReadOnly="True" 
                          EnableColumnVirtualization="True" 
                          EnableRowVirtualization="True"
                          ItemsSource="{Binding ActiveDB.ActivatedTable.Table}">
                </DataGrid>
            </Grid>
        </Grid>

        <!--White Background-->
        <!--<Border HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                Background="{Binding ElementName=window,Path=Background}"
                Visibility="{Binding IsCurrentControlVIsible}">
        </Border>-->

        <!--New Table Control-->

        <Border HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="White"
                Margin="{Binding RelativeSource={RelativeSource Self},Path=BorderThickness}"
                Padding="20"
                Width="{Binding ElementName=window,Path=ActualWidth}"
                Height="{Binding ElementName=window,Path=ActualHeight}"
                Visibility="{Binding IsCurrentControlVisible}" RenderTransformOrigin="0.5,0.5">
            <Border.Style>
                <Style TargetType="Border">
                    <Style.Triggers>
                        <Trigger Property="Visibility" Value="Visible">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                         To="1" Duration="0:0:0.75">
                                        </DoubleAnimation>
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Y" From="-1000" To="0" Duration="0:0:1">
                                            <DoubleAnimation.EasingFunction>
                                                <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="5"></ElasticEase>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <TranslateTransform></TranslateTransform>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <ContentControl Content="{Binding CurrentControl}"></ContentControl>
        </Border>
    </Grid>
</Window>
